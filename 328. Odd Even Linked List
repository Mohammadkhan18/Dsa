class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(head ==NULL || head->next ==NULL|| head->next->next == NULL) return head;
        ListNode* slow=head;
        ListNode* mid=head->next;  
        ListNode* fast=head->next->next;
        ListNode* head2=head->next;
        int cnt = 0;
        while(fast!=NULL){
            mid->next = fast->next;
            slow->next = fast;
            slow = mid;
            mid = fast;
            fast= fast->next;
              cnt++;
        }
        if(cnt%2==0){
            slow->next = head2;
            return head;
        }
        else{
            mid->next = head2;
            return head;
        }
    }
};
