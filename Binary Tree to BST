class Solution{
  public:
     void inorder(Node *root, vector<Node*> &v, vector<int> &v2, Node *orig_root, int &ind) {
        if(root != NULL) {
            inorder(root -> left,v,v2,orig_root,ind);
            if(root == orig_root) ind = v.size();
            v.push_back(root);
            v2.push_back(root -> data);
            inorder(root -> right,v,v2,orig_root,ind);
        }
    }

    
    Node *binaryTreeToBST (Node *root)
    {
        vector<Node*> v;
        vector<int> v2;
        int ind;
        inorder(root,v,v2,root,ind);
        
        sort(v2.begin(),v2.end());

        for(int i=0;i<v.size();i++) {
            v[i] -> data = v2[i];
        }
        
        
        return root;
    }
};
